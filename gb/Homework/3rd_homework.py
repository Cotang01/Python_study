# """
# Задача 16: Требуется вычислить, сколько раз встречается некоторое число X в
# массиве A[1..N]. Пользователь в первой строке вводит натуральное число N –
# количество элементов в массиве.
# В последующих строках записаны N целых чисел Ai.
# Последняя строка содержит число X
# """
# import random
#
# n = int(input('Введите количество элементов в массиве: '))
# a = [random.randint(0, 10) for _ in range(n)]
# print(a)
# x = int(input('Введите число, количество повторений в списке которого'
#               'вы хотите получить: '))
# print(f'В данном массиве число {x} встречается {a.count(x)} раз(а)')
#
# """
# Задача 18: Требуется найти в массиве A[1..N] самый близкий по величине
# элемент к заданному числу X. Пользователь в первой строке вводит
# натуральное число N – количество элементов в массиве. В последующих строках
# записаны N целых чисел Ai. Последняя строка содержит число X
# """
import random

# n = int(input('Введите количество элементов в массиве: '))
# a = [i for i in range(1, n+1)]
# a.remove(random.randint(1, n))
# print(a)
# x = int(input('Введите число, которое нужно найти: '))
# index = 0
# if x in a:
#     print(x)
# if x not in a:
#     if x > a[-1]:
#         print(f'Такого числа нет в массиве, ближайшее: {a[-1]}')
#     if x < a[0]:
#         print(f'Такого числа нет в массиве, ближайшее: {a[0]}')
#     if x > a[0] and x < a[-1]:
#         print(f'Такого числа нет в массиве, ближайшее: {x-1} или {x+1}')
#
# # Второй метод
#
# my_list = [random.randint(0, 100) for _ in range(20)]
# print(my_list)
#
# number = int(input('Введите число: '))
# nearest_number = my_list[0]
# dist = abs(number - nearest_number)  # Расстояние от нашего числа до
# # ближайшего
#
# for num in my_list:
#     if abs(num - number) < dist:
#         dist = abs(num - number)
#         nearest_number = num
#
# if my_list.count(number):
#     print(f'Число {number} встречается {my_list.count(number)} раз.')
# print(f'Ближайшее число {number} является {nearest_number}.')
#
# """
# *Задача 20: * В настольной игре Скрабл (Scrabble) каждая буква имеет
# определенную ценность. В случае с английским алфавитом очки распределяются
# так:
# A, E, I, O, U, L, N, S, T, R – 1 очко; D, G – 2 очка; B, C, M, P – 3 очка;
# F, H, V, W, Y – 4 очка; K – 5 очков; J, X – 8 очков; Q, Z – 10 очков.
# А русские буквы оцениваются так: А, В, Е, И, Н, О, Р, С, Т – 1 очко; Д, К, Л,
# М, П, У – 2 очка; Б, Г, Ё, Ь, Я – 3 очка; Й, Ы – 4 очка; Ж, З, Х, Ц,
# Ч – 5 очков; Ш, Э, Ю – 8 очков; Ф, Щ, Ъ – 10 очков.
# Напишите программу, которая вычисляет стоимость введенного пользователем
# слова.
# Будем считать, что на вход подается только одно слово,
# которое содержит либо только английские, либо только русские буквы.
# """
# Первый метод
# scores = {'A': 1, 'E': 1, 'I': 1, 'O': 1, 'U': 1, 'L': 1, 'N': 1, 'S': 1,
#           'T': 1, 'R': 1, 'D': 2, 'G': 2, 'B': 3, 'C': 3, 'M': 3, 'P': 3,
#           'F': 4, 'H': 4, 'V': 4, 'W': 4, 'Y': 4, 'k': 5, 'J': 8, 'X': 8,
#           'Q': 10, 'Z': 10, 'А': 1, 'В': 1, 'Е': 1, 'И': 1, 'Н': 1, 'О': 1,
#           'Р': 1, 'С': 1, 'Т': 1, 'Д': 2, 'К': 2, 'Л': 2, 'М': 2,
#           'П': 2, 'У': 2, 'Б': 3, 'Г': 3, 'Ё': 3, 'Ь': 3, 'Я': 3, 'Й': 4,
#           'Ы': 4, 'Ж': 5, 'З': 5, 'Х': 5, 'Ц': 5,
#           'Ч': 5, 'Ш': 8, 'Э': 8, 'Ю': 8, 'Ф': 10, 'Щ': 10, 'Ъ': 10}
# scores_sum = []
# index = 0
# word = str(input('Введите слово: '))
# for i in range(len(word)):
#     scores_sum.append(scores.get(word[index].upper()))
#     index += 1
#
# print(f'Вы получили: {sum(scores_sum)} очков.')
#
# Второй метод
#
# my_dict = {1: 'AEIOULNSTRАВЕИНОРСТ',
#            2: 'DGДКЛМПУ',
#            3: 'BCMPБГЁЬЯ',
#            4: 'FHVWYЙЫ',
#            5: 'KЖЗХЦЧ',
#            8: 'JXШЭЮ',
#            10: 'QZФЩЪ'}
# word = input('Введите слово: ')
# total = 0
#
# for letter in word:
#     for key, value in my_dict.items():
#         if letter.upper() in value:
#             total += key
# print(f'Слово {word} весит {total}')
#
#
# if all(list(map(lambda x: 64 < ord(x) < 123, word))):
#     print(f'Английское слово {word} весит {total}')
# elif all(list(map(lambda x: 1039 < ord(x) < 1104, word))):
#     print(f'Русское слово {word} весит {total}')
# else:
#     print('Ты читер')

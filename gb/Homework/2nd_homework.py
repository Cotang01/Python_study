# """
# Задача 10: На столе лежат n монеток. Некоторые из них лежат вверх решкой, а некоторые – гербом.
# Определите минимальное число монеток, которые нужно перевернуть, чтобы все монетки были повернуты вверх
# одной и той же стороной.
# Выведите минимальное количество монет, которые нужно перевернуть
# """
#
# from random import randint
#
# amount_of_coins = [] # 1-й список
# count = 0
# amount_of_reshka = [] # 2-й список
# amount_of_gerb = [] # 3-й список
#
# n = int(input('Сколько монеток лежит на столе?: '))
# while count < n: # Добавляем в 1-й пустой список рандомный элемент 'reshka' или 'gerb' столько раз, сколько n
#     amount_of_coins.append(['reshka', 'gerb'][randint(0, 1)])
#     count += 1
# amount_of_coins.sort() # Сортируем список, чтобы слева всегда были элементы 'gerb', а справа - 'reshka'
# while amount_of_coins[-1] == 'reshka': # Удаляем из нашего 1-го списка все 'reshka' и переносим их во 2-й список
#     del amount_of_coins[-1]
#     amount_of_reshka.append('reshka')
# amount_of_gerb = amount_of_coins # Теперь 3-му пустому списку можно "отдать" все оставшиеся элементы 'gerb'
# if len(amount_of_reshka) > len(amount_of_gerb): # Находим список с минимальной длиной и его длину выводим в ответ
#     print(f'Нужно перевернуть {len(amount_of_gerb)} монет.') # Если длина 2-го списка больше длины 3-го списка
# elif len(amount_of_reshka) < len(amount_of_gerb):
#     print(f'Нужно перевернуть {len(amount_of_reshka)} монет.') # Если длина 3-го списка больше длины 2-го списка
# else:
#     print(f'Нужно перевернуть {len(amount_of_coins)} монет.') # Если длина 1-го и 2-го списков равны

# """
# Задача 12: Петя и Катя – брат и сестра. Петя – студент, а Катя – школьница. Петя помогает Кате по математике.
# Он задумывает два натуральных числа X и Y (X,Y≤1000), а Катя должна их отгадать.
# Для этого Петя делает две подсказки. Он называет сумму этих чисел S и их произведение P.
# Помогите Кате отгадать задуманные Петей числа.
# """
#
# from random import randint
#
# x1 = randint(1, 1000)
# x2 = randint(1, 1000)
#
# s = x1 + x2
# p = x1 * x2
#
# print('Катя: - Согласно теореме Виета квадратное уравнение с нашими данными будет иметь вид: x^2 + x*(-s) + p = 0')
# print('s и p нам известны, остаётся их подставить в формулу и решить через дискриминант')
# print(f'Дискриминант будет равен {(-s)**2 - (4*p)}')
# d = (-s)**2 - (4*p)
# print(f'Первое загаданное число будет равно {int((s + d**0.5)/2)}')
# print(f'Второе загаданное число будет равно {int((s - d**0.5)/2)}')
#
# # Либо можно решить без объяснений и в две строчки:
#
# if (x1 ** 2) + (x1 * (s * -1)) + p == 0 and (x2 ** 2) + (x2 * (s * -1)) + p == 0:
#     print(f'Корнями уравнения будут {x1} и {x2}')
#
# """
# Задача 14: Требуется вывести все целые степени двойки (т.е. числа вида 2k), не превосходящие числа N.
# """
#
# n = int(input('Выше какого числа не выводить степени двойки?: '))
# k2 = [2]
# step = 1
# while k2[-1] <= n:
#     k2.append(2**step)
#     step += 1
# if k2[-1] > n:
#     k2.pop()
# print(k2)
#
# АНАЛОГИ РЕШЕНИЙ С GEEKBRAINS (НЕМНОГО ГОВНОЙ ВОНЯЕТ) ################################################################
#
# """
# Задача 10: На столе лежат n монеток. Некоторые из них лежат вверх решкой, а некоторые – гербом.
# Определите минимальное число монеток, которые нужно перевернуть, чтобы все монетки были повернуты вверх
# одной и той же стороной.
# Выведите минимальное количество монет, которые нужно перевернуть
# """
# n = int(input('Введите количество монеток: '))
# count_zero = 0 # count_reshka = 'reshka'
# count_one = 1 # count_gerb = 'gerb'
# for _ in range(n):
#     x = int(input())
#     if x == 0:
#         count_zero += 1
#     else:
#         count_one += 1
# if count_zero > count_one:
#     print(count_one)
# else:
#     print(count_zero)
#
# """
# Задача 12: Петя и Катя – брат и сестра. Петя – студент, а Катя – школьница. Петя помогает Кате по математике.
# Он задумывает два натуральных числа X и Y (X,Y≤1000), а Катя должна их отгадать.
# Для этого Петя делает две подсказки. Он называет сумму этих чисел S и их произведение P.
# Помогите Кате отгадать задуманные Петей числа.
# """
# s = int(input('Введите сумму чисел: '))
# p = int(input('Введите произведение чисел: '))
# for x1 in range(s):
#     for x2 in range(p):
#         if s == x1 + x2 and p == x1 * x2:
#             print(x1, x2)
#
# ЕДИНСТВЕННАЯ НОРМАЛЬНО РЕШЁННАЯ ЗАДАЧА
# """
# Задача 14: Требуется вывести все целые степени двойки (т.е. числа вида 2k), не превосходящие числа N.
# """
#
# n = int(input('Введите число: '))
# i = [0]
# while 2**i <= n:
#     print(2**i, end=' ')
#     i += 1
